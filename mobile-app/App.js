import React from 'react';  
import { createAppContainer } from 'react-navigation';  
import { createStackNavigator } from 'react-navigation-stack'
import {
  ActivityIndicator,
  Text,
  View,
  Button,
  StyleSheet,
  Dimensions,
  ScrollView
} from 'react-native';

import {
  BarChart,
  PieChart,
} from 'react-native-chart-kit';


class HomeScreen extends React.Component {  
    render() {  
        return (  
            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>  
                <Text>Home Screen</Text>  
                <Button  
                    title="Go to Results"  
                    onPress={() => this.props.navigation.navigate('Results')}  
                />  
            </View>  
        );  
    }  
}  
class ResultsScreen extends React.Component {  
  constructor(props){
    super(props);
    this.state ={ isLoading: true}
  }

  componentDidMount(){
    return fetch('http://10.55.7.237:5000/predict/data1.csv')
      .then((response) => response.json())
      .then((responseJson) => {

        this.setState({
          isLoading: false,
          dataSource: responseJson,
        }, function(){

        });

      })
      .catch((error) =>{
        console.error(error);
      });
  }

  render(){

    if(this.state.isLoading){
      return(
        <View style={{flex: 1, padding: 20}}>
          <ActivityIndicator/>
        </View>
      )
    }

    return (
      <ScrollView>
        <View style={styles.container}>
          <View>

            {/* Bar Chart*/}
            <Text
              style={{
                textAlign: 'center',
                fontSize: 18,
                padding: 16,
                marginTop: 16,
              }}>
              False Negatives of each models
            </Text>
            <BarChart
              data={{
                labels: [
                  'XGBoost',
                  'CatBoost',
                  'LightGBM',
                  'Ensemble Model',
                ],
                datasets: [
                  {
                    data: [this.state.dataSource.xgb.fn, this.state.dataSource.cb.fn, this.state.dataSource.lgb.fn, this.state.dataSource.ensemble.fn],
                  },
                ],
              }}
              width={Dimensions.get("window").width} // from react-native
              height={220}
              chartConfig={{
                backgroundColor: '#1cc910',
                backgroundGradientFrom: '#eff3ff',
                backgroundGradientTo: '#efefef',
                decimalPlaces: 2,
                color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,
                style: {
                  borderRadius: 16,
                },
              }}
              style={{
                marginVertical: 8,
                borderRadius: 16,
              }}
            />
            
            {/* XGBoost */}
            <Text
              style={{
                textAlign: 'center',
                fontSize: 18,
                padding: 16,
                marginTop: 16,
              }}>
              XGBoost
            </Text>
            <PieChart
              data={[
                {
                  name: 'True Negatives',
                  population: this.state.dataSource.xgb.tn,
                  color: 'rgba(131, 167, 234, 1)',
                  legendFontColor: '#7F7F7F',
                  legendFontSize: 10,
                },
                {
                  name: 'False Positives',
                  population: this.state.dataSource.xgb.fp,
                  color: 'rgb(0, 0, 255)',
                  legendFontColor: '#7F7F7F',
                  legendFontSize: 10,
                },
                {
                  name: 'False Negatives',
                  population: this.state.dataSource.xgb.fn,
                  color: '#F00',
                  legendFontColor: '#7F7F7F',
                  legendFontSize: 10,
                },
                {
                  name: 'True Positives',
                  population: this.state.dataSource.xgb.tp,
                  color: '#ffffff',
                  legendFontColor: '#7F7F7F',
                  legendFontSize: 10,
                },
              ]}
              width={Dimensions.get('window').width - 16}
              height={220}
              chartConfig={{
                backgroundColor: '#1cc910',
                backgroundGradientFrom: '#eff3ff',
                backgroundGradientTo: '#efefef',
                decimalPlaces: 2,
                color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,
                style: {
                  borderRadius: 16,
                },
              }}
              style={{
                marginVertical: 8,
                borderRadius: 16,
              }}
              accessor="population"
              backgroundColor="transparent"
              paddingLeft="15"
              absolute //for the absolute number remove if you want percentage
            />

            {/* CatBoost */}
            <Text
              style={{
                textAlign: 'center',
                fontSize: 18,
                padding: 16,
                marginTop: 16,
              }}>
              CatBoost
            </Text>
            <PieChart
              data={[
                {
                  name: 'True Negatives',
                  population: this.state.dataSource.cb.tn,
                  color: 'rgba(131, 167, 234, 1)',
                  legendFontColor: '#7F7F7F',
                  legendFontSize: 10,
                },
                {
                  name: 'False Positives',
                  population: this.state.dataSource.cb.fp,
                  color: 'rgb(0, 0, 255)',
                  legendFontColor: '#7F7F7F',
                  legendFontSize: 10,
                },
                {
                  name: 'False Negatives',
                  population: this.state.dataSource.cb.fn,
                  color: '#F00',
                  legendFontColor: '#7F7F7F',
                  legendFontSize: 10,
                },
                {
                  name: 'True Positives',
                  population: this.state.dataSource.cb.tp,
                  color: '#ffffff',
                  legendFontColor: '#7F7F7F',
                  legendFontSize: 10,
                },
              ]}
              width={Dimensions.get('window').width - 16}
              height={220}
              chartConfig={{
                backgroundColor: '#1cc910',
                backgroundGradientFrom: '#eff3ff',
                backgroundGradientTo: '#efefef',
                decimalPlaces: 2,
                color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,
                style: {
                  borderRadius: 16,
                },
              }}
              style={{
                marginVertical: 8,
                borderRadius: 16,
              }}
              accessor="population"
              backgroundColor="transparent"
              paddingLeft="15"
              absolute //for the absolute number remove if you want percentage
            />

            {/* LightGBM */}
            <Text
              style={{
                textAlign: 'center',
                fontSize: 18,
                padding: 16,
                marginTop: 16,
              }}>
              LightGBM
            </Text>
            <PieChart
              data={[
                {
                  name: 'True Negatives',
                  population: this.state.dataSource.lgb.tn,
                  color: 'rgba(131, 167, 234, 1)',
                  legendFontColor: '#7F7F7F',
                  legendFontSize: 10,
                },
                {
                  name: 'False Positives',
                  population: this.state.dataSource.lgb.fp,
                  color: 'rgb(0, 0, 255)',
                  legendFontColor: '#7F7F7F',
                  legendFontSize: 10,
                },
                {
                  name: 'False Negatives',
                  population: this.state.dataSource.lgb.fn,
                  color: '#F00',
                  legendFontColor: '#7F7F7F',
                  legendFontSize: 10,
                },
                {
                  name: 'True Positives',
                  population: this.state.dataSource.lgb.tp,
                  color: '#ffffff',
                  legendFontColor: '#7F7F7F',
                  legendFontSize: 10,
                },
              ]}
              width={Dimensions.get('window').width - 16}
              height={220}
              chartConfig={{
                backgroundColor: '#1cc910',
                backgroundGradientFrom: '#eff3ff',
                backgroundGradientTo: '#efefef',
                decimalPlaces: 2,
                color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,
                style: {
                  borderRadius: 16,
                },
              }}
              style={{
                marginVertical: 8,
                borderRadius: 16,
              }}
              accessor="population"
              backgroundColor="transparent"
              paddingLeft="15"
              absolute //for the absolute number remove if you want percentage
            />

            {/* Ensemble Model */}
            <Text
              style={{
                textAlign: 'center',
                fontSize: 18,
                padding: 16,
                marginTop: 16,
              }}>
              Ensemble Model
            </Text>
            <PieChart
              data={[
                {
                  name: 'True Negatives',
                  population: this.state.dataSource.ensemble.tn,
                  color: 'rgba(131, 167, 234, 1)',
                  legendFontColor: '#7F7F7F',
                  legendFontSize: 10,
                },
                {
                  name: 'False Positives',
                  population: this.state.dataSource.ensemble.fp,
                  color: 'rgb(0, 0, 255)',
                  legendFontColor: '#7F7F7F',
                  legendFontSize: 10,
                },
                {
                  name: 'False Negatives',
                  population: this.state.dataSource.ensemble.fn,
                  color: '#F00',
                  legendFontColor: '#7F7F7F',
                  legendFontSize: 10,
                },
                {
                  name: 'True Positives',
                  population: this.state.dataSource.ensemble.tp,
                  color: '#ffffff',
                  legendFontColor: '#7F7F7F',
                  legendFontSize: 10,
                },
              ]}
              width={Dimensions.get('window').width - 16}
              height={220}
              chartConfig={{
                backgroundColor: '#1cc910',
                backgroundGradientFrom: '#eff3ff',
                backgroundGradientTo: '#efefef',
                decimalPlaces: 2,
                color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,
                style: {
                  borderRadius: 16,
                },
              }}
              style={{
                marginVertical: 8,
                borderRadius: 16,
              }}
              accessor="population"
              backgroundColor="transparent"
              paddingLeft="15"
              absolute //for the absolute number remove if you want percentage
            />
          </View>
        </View>
      </ScrollView>
    );
  }
}  
  
const AppNavigator = createStackNavigator(  
    {  
        Home: HomeScreen,  
        Results: ResultsScreen  
    },  
    {  
        initialRouteName: "Home"  
    }  
);  
  
const AppContainer = createAppContainer(AppNavigator);  
export default class App extends React.Component {  
    render() {  
        return <AppContainer />;  
    }  
} 

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    padding: 8,
    paddingTop: 30,
    backgroundColor: '#ecf0f1',
  },
});