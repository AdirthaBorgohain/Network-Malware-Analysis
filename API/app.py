from flask import Flask
from utils import load_data, predict, convert_prob_to_class, get_confusion_matrix

import json

app = Flask(__name__)


@app.route('/predict/<filename>')
def predict_network(filename):

    print('Loading Data ...')
    X, y = load_data(filename)

    print('Data loaded')
    xgb_probs, cb_probs, lgb_probs, preds = predict(X)

    xgb_preds = convert_prob_to_class(xgb_probs)
    cb_preds = convert_prob_to_class(cb_probs)
    lgb_preds = convert_prob_to_class(lgb_probs)

    print('Predicted !!')

    xgb_cm = get_confusion_matrix(y, xgb_preds)
    cb_cm = get_confusion_matrix(y, cb_preds)
    lgb_cm = get_confusion_matrix(y, lgb_preds)

    cm = get_confusion_matrix(y, preds)


    res = {
        'result': {
            'malware_count': list(preds).count(1),
            'benign_count': list(preds).count(0)
        },
        'ensemble': {
            'tn': cm[0][0],
            'fp': cm[0][1],
            'fn': cm[1][0],
            'tp': cm[1][1]
        },
        'xgb': {
            'tn': xgb_cm[0][0],
            'fp': xgb_cm[0][1],
            'fn': xgb_cm[1][0],
            'tp': xgb_cm[1][1]
        },
        'cb': {
            'tn': cb_cm[0][0],
            'fp': cb_cm[0][1],
            'fn': cb_cm[1][0],
            'tp': cb_cm[1][1]
        },
        'lgb': {
            'tn': lgb_cm[0][0],
            'fp': lgb_cm[0][1],
            'fn': lgb_cm[1][0],
            'tp': lgb_cm[1][1]
        }
    }
    return json.dumps(res, indent=2)


if __name__ == "__main__":
    app.run(host='0.0.0.0')
    