from flask import Flask
from utils import load_data, predict, convert_prob_to_class, get_confusion_matrix

import json

app = Flask(__name__)


@app.route('/predict/<filename>')
def predict_network(filename):

    print('Loading Data ...')
    X, y = load_data(filename)

    print('Data loaded')
    xgb_probs, cb_probs, lgb_probs, preds = predict(X)

    xgb_preds = convert_prob_to_class(xgb_probs[:, 1])
    cb_preds = convert_prob_to_class(cb_probs[:, 1])
    lgb_preds = convert_prob_to_class(lgb_probs.tolist())

    print('Predicted !!')

    xgb_cm = get_confusion_matrix(y, xgb_preds)
    cb_cm = get_confusion_matrix(y, cb_preds)
    lgb_cm = get_confusion_matrix(y, lgb_preds)

    cm = get_confusion_matrix(y, preds)


    res = {
        'result': {
            'malware_count': int(list(preds).count(1)),
            'benign_count': int(list(preds).count(0))
        },
        'ensemble': {
            'tn': int(cm[0][0]),
            'fp': int(cm[0][1]),
            'fn': int(cm[1][0]),
            'tp': int(cm[1][1])
        },
        'xgb': {
            'tn': int(xgb_cm[0][0]),
            'fp': int(xgb_cm[0][1]),
            'fn': int(xgb_cm[1][0]),
            'tp': int(xgb_cm[1][1])
        },
        'cb': {
            'tn': int(cb_cm[0][0]),
            'fp': int(cb_cm[0][1]),
            'fn': int(cb_cm[1][0]),
            'tp': int(cb_cm[1][1])
        },
        'lgb': {
            'tn': int(lgb_cm[0][0]),
            'fp': int(lgb_cm[0][1]),
            'fn': int(lgb_cm[1][0]),
            'tp': int(lgb_cm[1][1])
        }
    }

    print(res)
    return json.dumps(res, indent=4)


if __name__ == "__main__":
    app.run(host='0.0.0.0')
